#!/usr/bin/env python3
"""
–°—Ç–∞–±–∏–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
"""
import asyncio
import aiohttp
from dotenv import load_dotenv
import os
import json
from datetime import datetime

load_dotenv()

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ALLOWED_USER_ID = 99006770
BASE_URL = f"https://api.telegram.org/bot{TOKEN}"

def log(message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–µ–º"""
    now = datetime.now().strftime("%H:%M:%S")
    print(f"[{now}] {message}")

async def send_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    async with aiohttp.ClientSession() as session:
        url = f"{BASE_URL}/sendMessage"
        data = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": "HTML"
        }
        
        try:
            async with session.post(url, json=data) as response:
                result = await response.json()
                if result.get('ok'):
                    log(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:50]}...")
                    return True
                else:
                    log(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result.get('description', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è')}")
                    return False
        except Exception as e:
            log(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
            return False

async def get_updates(offset=0):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    async with aiohttp.ClientSession() as session:
        url = f"{BASE_URL}/getUpdates"
        params = {"offset": offset, "timeout": 10}
        
        try:
            async with session.get(url, params=params) as response:
                data = await response.json()
                if data.get('ok'):
                    return data['result']
                else:
                    log(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è')}")
                    return []
        except Exception as e:
            log(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
            return []

async def process_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    user_id = message['from']['id']
    username = message['from'].get('username', '–±–µ–∑_username')
    text = message.get('text', '')
    chat_id = message['chat']['id']
    
    log(f"üì® –û—Ç @{username} ({user_id}): {text}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if user_id != ALLOWED_USER_ID:
        await send_message(chat_id, f"‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω\\n\\n–í–∞—à ID: {user_id}\\n–¢—Ä–µ–±—É–µ—Ç—Å—è: {ALLOWED_USER_ID}")
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if text == '/start':
        response = f"""ü§ñ <b>CreativeKeitaroBot –∑–∞–ø—É—â–µ–Ω!</b>

üëã –ü—Ä–∏–≤–µ—Ç!
üÜî –í–∞—à ID: <code>{user_id}</code>
üë§ –†–æ–ª—å: <b>–í–ª–∞–¥–µ–ª–µ—Ü</b>
‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
/ping - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏

‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ –Ω–∞ HTTP API"""
        
        await send_message(chat_id, response)
        
    elif text == '/help':
        response = """üìñ <b>–ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ CreativeKeitaroBot</b>

üîß <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/status - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
/ping - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏

üìä <b>–§—É–Ω–∫—Ü–∏–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ):</b>
‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –≤ Google Drive
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Keitaro API
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π

üõ† <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –í–µ—Ä—Å–∏—è: 1.0 HTTP API
‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite
‚Ä¢ –°—Ç–∞—Ç—É—Å: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

üìß <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @PlantatorBob"""
        
        await send_message(chat_id, response)
        
    elif text == '/status':
        response = f"""üìä <b>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</b>

üü¢ –ë–æ—Ç: <b>–†–∞–±–æ—Ç–∞–µ—Ç</b>
üåê API: <b>–ü–æ–¥–∫–ª—é—á–µ–Ω</b>
‚è∞ –í—Ä–µ–º—è: <code>{datetime.now().strftime('%d.%m.%Y %H:%M:%S')}</code>
üîÑ –†–µ–∂–∏–º: <b>HTTP Polling</b>

‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"""
        
        await send_message(chat_id, response)
        
    elif text == '/ping':
        await send_message(chat_id, "üèì Pong! –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –±—ã—Å—Ç—Ä–æ.")
        
    elif text.startswith('/'):
        await send_message(chat_id, f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}\\n\\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
        
    else:
        # –≠—Ö–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        await send_message(chat_id, f"üìù –ü–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: <i>{text}</i>\\n\\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã /start –∏–ª–∏ /help")

async def main():
    log("üöÄ –ó–∞–ø—É—Å–∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ CreativeKeitaroBot...")
    log(f"üîë –¢–æ–∫–µ–Ω: {TOKEN[:20]}...")
    log(f"üë§ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {ALLOWED_USER_ID}")
    
    offset = 0
    error_count = 0
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while True:
        try:
            updates = await get_updates(offset)
            
            if updates:
                log(f"üì• –ü–æ–ª—É—á–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
                error_count = 0  # –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                
                for update in updates:
                    if 'message' in update:
                        await process_message(update['message'])
                    
                    offset = update['update_id'] + 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
            await asyncio.sleep(1)
                
        except KeyboardInterrupt:
            log("‚õî –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
            
        except Exception as e:
            error_count += 1
            log(f"‚ùå –û—à–∏–±–∫–∞ #{error_count}: {e}")
            
            if error_count >= 10:
                log("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫. –£–≤–µ–ª–∏—á–∏–≤–∞—é –ø–∞—É–∑—É...")
                await asyncio.sleep(30)
                error_count = 0
            else:
                await asyncio.sleep(5)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")